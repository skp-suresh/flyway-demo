2018-08-30 13:52:41 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "insert into book values(1, 'book1', ísbn1[*]');"; SQL statement:
insert into book values(1, 'book1', ísbn1'); [42000-197]
2018-08-30 15:10:29 jdbc[24]: exception
org.h2.jdbc.JdbcSQLException: Table "BOOKS" not found; SQL statement:
select * from books [42102-197]
2018-08-30 15:12:57 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Column "FK_PUBLISHER_ID" not found; SQL statement:
alter table book add FOREIGN KEY (fk_publisher_id) REFERENCES publisher(id) [42122-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:74)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:212)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:78)
	at org.h2.command.CommandContainer.update(CommandContainer.java:102)
	at org.h2.command.Command.executeUpdate(Command.java:261)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.flywaydb.core.internal.util.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:265)
	at org.flywaydb.core.internal.database.StandardSqlStatement.execute(StandardSqlStatement.java:41)
	at org.flywaydb.core.internal.database.ExecutableSqlScript.execute(ExecutableSqlScript.java:128)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:75)
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:363)
	at org.flywaydb.core.internal.command.DbMigrate.access$400(DbMigrate.java:52)
	at org.flywaydb.core.internal.command.DbMigrate$5.call(DbMigrate.java:297)
	at org.flywaydb.core.internal.util.jdbc.TransactionTemplate.execute(TransactionTemplate.java:75)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:294)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:259)
	at org.flywaydb.core.internal.command.DbMigrate.access$300(DbMigrate.java:52)
	at org.flywaydb.core.internal.command.DbMigrate$4.call(DbMigrate.java:179)
	at org.flywaydb.core.internal.command.DbMigrate$4.call(DbMigrate.java:176)
	at org.flywaydb.core.internal.database.Connection$1.call(Connection.java:155)
	at org.flywaydb.core.internal.util.jdbc.TransactionTemplate.execute(TransactionTemplate.java:75)
	at org.flywaydb.core.internal.database.Connection.lock(Connection.java:151)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:148)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:176)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:145)
	at org.flywaydb.core.Flyway$1.execute(Flyway.java:1206)
	at org.flywaydb.core.Flyway$1.execute(Flyway.java:1168)
	at org.flywaydb.core.Flyway.execute(Flyway.java:1655)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:1168)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.demo.flywaydemo.FlywayDemoApplication.main(FlywayDemoApplication.java:10)
2018-08-30 15:29:34 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Duplicate column name "PUBLISHER_ID"; SQL statement:
alter TABLE book add publisher_id int [42121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.setColumns(Table.java:431)
	at org.h2.table.TableBase.<init>(TableBase.java:46)
	at org.h2.mvstore.db.MVTable.<init>(MVTable.java:128)
	at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:109)
	at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:42)
	at org.h2.schema.Schema.createTable(Schema.java:670)
	at org.h2.command.ddl.AlterTableAlterColumn.cloneTableStructure(AlterTableAlterColumn.java:393)
	at org.h2.command.ddl.AlterTableAlterColumn.copyData(AlterTableAlterColumn.java:284)
	at org.h2.command.ddl.AlterTableAlterColumn.update(AlterTableAlterColumn.java:197)
	at org.h2.command.CommandContainer.update(CommandContainer.java:102)
	at org.h2.command.Command.executeUpdate(Command.java:261)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.flywaydb.core.internal.util.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:265)
	at org.flywaydb.core.internal.database.StandardSqlStatement.execute(StandardSqlStatement.java:41)
	at org.flywaydb.core.internal.database.ExecutableSqlScript.execute(ExecutableSqlScript.java:128)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:75)
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:363)
	at org.flywaydb.core.internal.command.DbMigrate.access$400(DbMigrate.java:52)
	at org.flywaydb.core.internal.command.DbMigrate$5.call(DbMigrate.java:297)
	at org.flywaydb.core.internal.util.jdbc.TransactionTemplate.execute(TransactionTemplate.java:75)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:294)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:259)
	at org.flywaydb.core.internal.command.DbMigrate.access$300(DbMigrate.java:52)
	at org.flywaydb.core.internal.command.DbMigrate$4.call(DbMigrate.java:179)
	at org.flywaydb.core.internal.command.DbMigrate$4.call(DbMigrate.java:176)
	at org.flywaydb.core.internal.database.Connection$1.call(Connection.java:155)
	at org.flywaydb.core.internal.util.jdbc.TransactionTemplate.execute(TransactionTemplate.java:75)
	at org.flywaydb.core.internal.database.Connection.lock(Connection.java:151)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:148)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:176)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:145)
	at org.flywaydb.core.Flyway$1.execute(Flyway.java:1206)
	at org.flywaydb.core.Flyway$1.execute(Flyway.java:1168)
	at org.flywaydb.core.Flyway.execute(Flyway.java:1655)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:1168)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.demo.flywaydemo.FlywayDemoApplication.main(FlywayDemoApplication.java:10)
2018-08-30 15:33:07 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "PUBLISHER_ID" not found; SQL statement:
select * from publisher_id [42102-197]
